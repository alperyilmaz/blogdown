[{"authors":["admin"],"categories":null,"content":"Alper Yilmaz is an Assistant Professor at Yildiz Technical University. His research interest is in various topics in the field of bioinformatics. More specifically, he is interested in genome grammar (text mining in genome), next-generation sequencing analysis and analysis of gene expression via deep learning.\nShort Bio: Alper Yilmaz completed his bachelor in 2000 in field of Molecular Biology and Genetics. Then he started his PhD at the Ohio State Universtiy, studied translational control of HIV mRNAs. After completing his PhD in 2007 he studied on DNA words in genomes and next-generation sequencing analysis as a post-doc in same university. He started faculty position in 2012 and is interested in genome grammar, next-generation sequencing analysis and analysis of gene expression via deep learning.\nMe in one sentence: Socially awkward, distant and introvert, avid Linux user, commandline guru, fascinated with pipe (| or %\u0026gt;%), plain text enthusiast, excited with (R)Markdown, Docker evangelist, likes coding, Tidyverse fan, would like to flow with Reflow, amazed with viruses, molecular biologist by training, self-taught bioinformatician, a numberphile and a computerphile.\nDownload my CV\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"Alper Yilmaz is an Assistant Professor at Yildiz Technical University. His research interest is in various topics in the field of bioinformatics. More specifically, he is interested in genome grammar (text mining in genome), next-generation sequencing analysis and analysis of gene expression via deep learning.\nShort Bio: Alper Yilmaz completed his bachelor in 2000 in field of Molecular Biology and Genetics. Then he started his PhD at the Ohio State Universtiy, studied translational control of HIV mRNAs.","tags":null,"title":"Alper Yilmaz","type":"author"},{"authors":null,"categories":null,"content":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.main]] menu links to it in the config.toml.\n","date":1536440400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536440400,"objectID":"c3224f3a64174f08aaf31e1f1d16ffd3","permalink":"/tutorial/","publishdate":"2018-09-09T00:00:00+03:00","relpermalink":"/tutorial/","section":"tutorial","summary":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.","tags":null,"title":"Overview","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906538400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906538400,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00+03:00","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1591005600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1591005600,"objectID":"fdf53be6090b49b1d503c39b531d4e2c","permalink":"/talk/example2/","publishdate":"2017-01-01T00:00:00+03:00","relpermalink":"/talk/example2/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":["Alper Yilmaz"],"categories":["blog"],"content":" Plain Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nlibrary(tidyverse)  Here\u0026rsquo;s the logo\n","date":1557281594,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557281594,"objectID":"61406b623980a5d8d2a80af8a7c5306b","permalink":"/blog/2019/05/07/plain-markdown/","publishdate":"2019-05-07T21:13:14-05:00","relpermalink":"/blog/2019/05/07/plain-markdown/","section":"post","summary":"Plain Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nlibrary(tidyverse)  Here\u0026rsquo;s the logo","tags":["markdown"],"title":"Plain Markdown","type":"post"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1556312400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556312400,"objectID":"e02b37f74d319cb0da23f6346cb601fd","permalink":"/project/deep-learning-genes/","publishdate":"2019-04-27T00:00:00+03:00","relpermalink":"/project/deep-learning-genes/","section":"project","summary":"An example of using the in-built project page for deep learning.","tags":["Deep Learning"],"title":"Deep Learning Gene Expression","type":"project"},{"authors":["Alper Yilmaz"],"categories":null,"content":" Supplementary notes can be added here, including code and math.   ","date":1554584400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554584400,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"/publication/preprint/","publishdate":"2019-04-07T00:00:00+03:00","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":["Alper Yilmaz"],"categories":[],"content":" from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:\ncd \u0026lt;MY_WEBSITE_FOLDER\u0026gt; hugo new --kind post post/my-post cd \u0026lt;MY_WEBSITE_FOLDER\u0026gt;/content/post/my-post/  Create or upload a Jupyter notebook Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (New \u0026gt; Python Notebook) or upload a notebook.\njupyter notebook  Convert notebook to Markdown jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=. # Copy the contents of Untitled.md and append it to index.md: cat Untitled.md | tee -a index.md # Remove the temporary file: rm Untitled.md  Edit your post metadata Open index.md in your text editor and edit the title etc. in the front matter according to your preference.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"/blog/2019/02/05/display-jupyter-notebooks-with-academic/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/blog/2019/02/05/display-jupyter-notebooks-with-academic/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":["Alper Yilmaz"],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\nQuotation example  \u0026ldquo;For years there has been a theory that millions of monkeys typing at random on millions of typewriters would reproduce the entire works of Shakespeare. The Internet has proven this theory to be untrue.\u0026rdquo; \u0026ndash; John Doe\n Highlight R library(tidyverse) library(purrr) iris %\u0026gt;% mutate(row_mean = pmap_dbl(select_if(., is.numeric), lift_vd(mean)))  Highlight Python import numpy as np import urllib.request url = \u0026quot;https://s3-us-west-2.amazonaws.com/veri-analizi/tcga_sample_save.npz\u0026quot; urllib.request.urlretrieve(url, 'tcga_sample_save.npz') with np.load('tcga_sample_save.npz') as data: x_train = data['x_train'] y_train = data['y_train'] x_test = data['x_test'] y_test = data['y_test']  ","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536440400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536440400,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"/tutorial/example/","publishdate":"2018-09-09T00:00:00+03:00","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":null,"categories":[],"content":"After starting to use the bash, you quickly realize bash history is an invaluable asset. You can quickly search and find a previous command in order to remember when and what you have done. I was using a primitive way to archive the history with which I accumulated history of commands since 2008. The primitive setup has two parts. First part is a cron job:\n0 13 3,11,24 * * /bin/cat ~/.bash_history \u0026gt; ~/.history_backup_`date +\\%Y\\%m\\%d`  This cron job line means: on 3rd, 11th and 24th of each month at 1pm dump contents of .bash_history file to history backup file. By time, I ended up with 1-2 files per month.\nSecond part is couple bash functions to merge the archive.\noldhistory(){ for file in /home/alper/.history_backup_20*; do cat $file; echo; done | perl -ne 'if (/^#([0-9]{10}$)/){my $nextline=\u0026lt;\u0026gt;; $hash{$1}=$nextline }else{next}; END{print map { $hash{$_} } sort keys %hash}'; } oldhistory-time(){ for file in /home/alper/.history_backup_20*; do cat $file; echo; done | perl -ne 'if (/^#([0-9]{10}$)/){ my $nextline=\u0026lt;\u0026gt;; $hash{$1}=$nextline }else{next}; END{print map {scalar localtime($_).\u0026quot;\\t\u0026quot;.$hash{$_}} sort keys %hash}'; }  However, just recently I noticed that the bash history file is trimmed and contained only 10 days of worth commands. Luckily, I recovered a backup of .bash_history file and didn\u0026rsquo;t lose much data. But, it was a wakeup call, my primitive system is prone to lose data without a notice. So, I started searching for a better solution to archive bash history.\nWhen I search online I first came across this post. And then carried on searching and didn\u0026rsquo;t find anything that intrigues me. I also searched Github after which I got couple of aha moments. Bashhub can save your bash history in the cloud. That was very interesting and useful but I didn\u0026rsquo;t like the third party keeping the commands. There were couple more projects offering nice UI or advanced features (sqlite database for instance), such as history, hstr, bash-history-sqlite.\nFinally, I got a good idea from this blog. Now, I\u0026rsquo;m testing this method and hoping that it would work with less problems.\nexport PROMPT_COMMAND='history -a; history -n; if [ \u0026quot;$(id -u)\u0026quot; -ne 0 ]; then echo -e \u0026quot;$(date \u0026quot;+%Y-%m-%d.%H:%M:%S\u0026quot;)\\t$(hostname)\\t$(pwd)\\t$(history -p \\!-1)\u0026quot; \u0026gt;\u0026gt; ~/.logs/bash-history-$(hostname)-$(date \u0026quot;+%Y-%m-%d\u0026quot;).log; fi'   Update (2017-05-26): This code causes problem with screen. Within screen the command is not printed out and written correctly into bash-history file.\n ","date":1474925165,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1474925165,"objectID":"d25804cc703cdcb415432d0e2b54e4a3","permalink":"/blog/2016/09/27/eternal-bash-history/","publishdate":"2016-09-27T00:26:05+03:00","relpermalink":"/blog/2016/09/27/eternal-bash-history/","section":"post","summary":"After starting to use the bash, you quickly realize bash history is an invaluable asset. You can quickly search and find a previous command in order to remember when and what you have done. I was using a primitive way to archive the history with which I accumulated history of commands since 2008. The primitive setup has two parts. First part is a cron job:\n0 13 3,11,24 * * /bin/cat ~/.","tags":["commandline"],"title":"Eternal bash history","type":"post"},{"authors":null,"categories":null,"content":"From time to time, I had many terminal tabs open and wanted to see the list of terminals along with working folder names. Finally, I fed up with the issue tried to find a solution. After fiddling with some code, here\u0026rsquo;s the function that I added to .bashrc file\ntty-list() { ps aux --sort=start_time | grep \u0026quot;pts/\u0026quot; | grep [b]ash | awk -F\u0026quot; +\u0026quot; '{print $2\u0026quot;\\t\u0026quot;$7}' | while read PID PTS; do echo -n -e \u0026quot;$PTS\u0026quot;\u0026quot;\\t\u0026quot;; readlink -f /proc/$PID/cwd; done ; }  In terminal, tty-list command lists the pts number and working folder name as shown below:\npts/3\t/home/alper pts/6\t/home/alper pts/7\t/home/alper/.logs pts/8\t/home/alper/tmp pts/9\t/home/alper/Documents/blog-github/website pts/9 /home/alper/Documents/blog-github/website  The list is in order of opening the tabs. As you notice, last two lines are duplicate because when you issue the function there\u0026rsquo;s while loop and I\u0026rsquo;m guessing it\u0026rsquo;s running in a subshell so the terminal you run the function is counted twice.\n","date":1473930000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1473930000,"objectID":"ace9f9ceaf1e026d5f2d2ee151e8e8e3","permalink":"/blog/2016/09/15/list-of-terminals-with-working-folder-names/","publishdate":"2016-09-15T12:00:00+03:00","relpermalink":"/blog/2016/09/15/list-of-terminals-with-working-folder-names/","section":"post","summary":"From time to time, I had many terminal tabs open and wanted to see the list of terminals along with working folder names. Finally, I fed up with the issue tried to find a solution. After fiddling with some code, here\u0026rsquo;s the function that I added to .bashrc file\ntty-list() { ps aux --sort=start_time | grep \u0026quot;pts/\u0026quot; | grep [b]ash | awk -F\u0026quot; +\u0026quot; '{print $2\u0026quot;\\t\u0026quot;$7}' | while read PID PTS; do echo -n -e \u0026quot;$PTS\u0026quot;\u0026quot;\\t\u0026quot;; readlink -f /proc/$PID/cwd; done ; }  In terminal, tty-list command lists the pts number and working folder name as shown below:","tags":["commandline"],"title":"List of terminals with working folder names","type":"post"},{"authors":null,"categories":null,"content":"After going thru a long list of themes, the following themes have some or all capabilities I\u0026rsquo;d like to have in a theme:\nhttp://www.hossainmohdfaysal.com/hmfaysal-omega-theme/\nhttps://github.com/holman/left might not be as pretty as https://zachholman.com/\nhttp://chrisanthropic.github.io/slim-pickins-jekyll-theme/\nhttps://rohanchandra.github.io/type-theme/\nhttp://aronbordin.com/neo-hpstr-jekyll-theme/\nhttp://bloginn-jekyll.justgoodthemes.com/\nhttp://dongchuan.github.io/\nhttp://biomadeira.github.io/jasper/\nhttp://phlow.github.io/feeling-responsive/\nNot sure if this one has a downloadable theme: https://mademistakes.com/articles/jekyll-style-guide/\nHighly modified theme: http://willkoehler.net/2014/08/26/save-50-hours-setting-up-your-jekyll-blog.html\n","date":1463695857,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1463695857,"objectID":"29e24a695a75f0bd449dfc0989c3c7a4","permalink":"/blog/2016/05/20/jekyll-themes-i-want-to-try/","publishdate":"2016-05-20T01:10:57+03:00","relpermalink":"/blog/2016/05/20/jekyll-themes-i-want-to-try/","section":"post","summary":"After going thru a long list of themes, the following themes have some or all capabilities I\u0026rsquo;d like to have in a theme:\n","tags":["jekyll"],"title":"Jekyll themes I want to try","type":"post"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461704400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461704400,"objectID":"176af186fc5c452f4dbe4b259a18a901","permalink":"/project/metabolic-networks/","publishdate":"2016-04-27T00:00:00+03:00","relpermalink":"/project/metabolic-networks/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461704400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461704400,"objectID":"8aafcfc4e641595b70a5d19125ddd0a4","permalink":"/project/word-vectors/","publishdate":"2016-04-27T00:00:00+03:00","relpermalink":"/project/word-vectors/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["Alper Yilmaz"],"categories":null,"content":" Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\nCheck out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n Setup Academic Get Started View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt   \nKey features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Color Themes Academic comes with day (light) and night (dark) mode built-in. Click the sun/moon icon in the top right of the Demo to see it in action!\nChoose a stunning color and font theme for your site. Themes are fully customizable and include:\n         Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461099600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555448400,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"/blog/2016/04/20/academic-the-website-builder-for-hugo/","publishdate":"2016-04-20T00:00:00+03:00","relpermalink":"/blog/2016/04/20/academic-the-website-builder-for-hugo/","section":"post","summary":"Create a beautifully simple website in under 10 minutes.","tags":["Academic"],"title":"Academic: the website builder for Hugo","type":"post"},{"authors":["Alper Yilmaz"],"categories":null,"content":" testing markdown Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.  Supplementary notes can be added here, including code and math.  \nLorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.\n","date":1441054800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441054800,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"/publication/journal-article/","publishdate":"2015-09-01T00:00:00+03:00","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Alper Yilmaz"],"categories":["R"],"content":" R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932  Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA )  Figure 1: A fancy pie chart.   ","date":1437703994,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437703994,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"/blog/2015/07/23/hello-r-markdown/","publishdate":"2015-07-23T21:13:14-05:00","relpermalink":"/blog/2015/07/23/hello-r-markdown/","section":"post","summary":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":["Wilberforce Zachary Ouma","Maria Katherine Mejia-Guerra","Alper Yilmaz","Pablo Pareja-Tobes","Wei Li","Andrea I Doseff","Erich Grotewold"],"categories":null,"content":"","date":1425160800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1425160800,"objectID":"40ea366a28f9524de71378c3212c5489","permalink":"/publication/","publishdate":"2015-03-01T00:00:00+02:00","relpermalink":"/publication/","section":"publication","summary":"Establishing the architecture of gene regulatory networks (GRNs) relies on chromatin immunoprecipitation followed by massively parallel sequencing (ChIP-Seq) methods that provide genome-wide transcription factor binding sites (TFBSs). ChIP-Seq furnishes millions of short reads that, after alignment, describe the genome-wide binding sites of a particular TF. However, in all organisms investigated an average of 40% of reads fail to align to the corresponding genome, with some datasets having as much as 80% of reads failing to align. We describe here the provenance of previously unaligned reads in ChIP-Seq experiments from animals and plants. We show that a substantial portion corresponds to sequences of bacterial and metazoan origin, irrespective of the ChIP-Seq chromatin source. Unforeseen was the finding that 30%-40% of unaligned reads were actually alignable. To validate these observations, we investigated the characteristics of the previously unaligned reads corresponding to TAL1, a human TF involved in lineage specification of hemopoietic cells. We show that, while unmapped ChIP-Seq read datasets contain foreign DNA sequences, additional TFBSs can be identified from the previously unaligned ChIP-Seq reads. Our results indicate that the re-evaluation of previously unaligned reads from ChIP-Seq experiments will significantly contribute to TF target identification and determination of emerging properties of GRNs. ","tags":null,"title":"Important biological information uncovered in previously unaligned reads from chromatin immunoprecipitation experiments (ChIP-Seq).","type":"publication"},{"authors":["Alper Yilmaz","Robert Ford"],"categories":null,"content":" Supplementary notes can be added here, including code and math.   ","date":1372626000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372626000,"objectID":"64480083b2094f68a96d3250a1edf5e4","permalink":"/abstract/conference-paper/","publishdate":"2013-07-01T00:00:00+03:00","relpermalink":"/abstract/conference-paper/","section":"abstract","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"abstract"},{"authors":["Daniel Arango","Kengo Morohashi","Alper Yilmaz","Kouji Kuramochi","Arti Parihar","Bledi Brahimaj","Erich Grotewold","Andrea I Doseff"],"categories":null,"content":"","date":1370034000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1370034000,"objectID":"3341cbbee4f039ab7a40dd74c22e741b","permalink":"/publication/arango-2013-id-224/","publishdate":"2013-06-01T00:00:00+03:00","relpermalink":"/publication/arango-2013-id-224/","section":"publication","summary":"Flavonoids constitute the largest class of dietary phytochemicals, adding essential health value to our diet, and are emerging as key nutraceuticals. Cellular targets for dietary phytochemicals remain largely unknown, posing significant challenges for the regulation of dietary supplements and the understanding of how nutraceuticals provide health value. Here, we describe the identification of human cellular targets of apigenin, a flavonoid abundantly present in fruits and vegetables, using an innovative high-throughput approach that combines phage display with second generation sequencing. The 160 identified high-confidence candidate apigenin targets are significantly enriched in three main functional categories: GTPase activation, membrane transport, and mRNA metabolism/alternative splicing. This last category includes the heterogeneous nuclear ribonucleoprotein A2 (hnRNPA2), a factor involved in splicing regulation, mRNA stability, and mRNA transport. Apigenin binds to the C-terminal glycine-rich domain of hnRNPA2, preventing hnRNPA2 from forming homodimers, and therefore, it perturbs the alternative splicing of several human hnRNPA2 targets. Our results provide a framework to understand how dietary phytochemicals exert their actions by binding to many functionally diverse cellular targets. In turn, some of them may modulate the activity of a large number of downstream genes, which is exemplified here by the effects of apigenin on the alternative splicing activity of hnRNPA2. Hence, in contrast to small-molecule pharmaceuticals designed for defined target specificity, dietary phytochemicals affect a large number of cellular targets with varied affinities that, combined, result in their recognized health benefits.","tags":null,"title":"Molecular basis for the action of a dietary flavonoid revealed by the comprehensive identification of apigenin human targets.","type":"publication"},{"authors":["Nathalie Bolduc","Alper Yilmaz","Maria Katherine Mejia-Guerra","Kengo Morohashi","Devin O'Connor","Erich Grotewold","Sarah Hake"],"categories":null,"content":"","date":1343768400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1343768400,"objectID":"a5646769fd7ffc827c0a8ddf3bdef006","permalink":"/publication/bolduc-2012-id-223/","publishdate":"2012-08-01T00:00:00+03:00","relpermalink":"/publication/bolduc-2012-id-223/","section":"publication","summary":"KNOTTED1 (KN1)-like homeobox (KNOX) transcription factors function in plant meristems, self-renewing structures consisting of stem cells and their immediate daughters. We defined the KN1 cistrome in maize inflorescences and found that KN1 binds to several thousand loci, including 643 genes that are modulated in one or multiple tissues. These KN1 direct targets are strongly enriched for transcription factors (including other homeobox genes) and genes participating in hormonal pathways, most significantly auxin, demonstrating that KN1 plays a key role in orchestrating the upper levels of a hierarchical gene regulatory network that impacts plant meristem identity and function.","tags":null,"title":"Unraveling the KNOTTED1 regulatory network in maize meristems.","type":"publication"},{"authors":["Kengo Morohashi","María Isabel Casas","Maria Lorena Falcone Ferreyra","Lorena Falcone Ferreyra","María Katherine Mejía-Guerra","Lucille Pourcel","Alper Yilmaz","Antje Feller","Bruna Carvalho","Julia Emiliani","Eduardo Rodriguez","Silvina Pellegrinet","Michael McMullen","Paula Casati","Erich Grotewold"],"categories":null,"content":"","date":1341090000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1341090000,"objectID":"8d6d60e83a48c5820eb8e0f7954a3254","permalink":"/publication/morohashi-2012-id-222/","publishdate":"2012-07-01T00:00:00+03:00","relpermalink":"/publication/morohashi-2012-id-222/","section":"publication","summary":"Pericarp Color1 (P1) encodes an R2R3-MYB transcription factor responsible for the accumulation of insecticidal flavones in maize (Zea mays) silks and red phlobaphene pigments in pericarps and other floral tissues, which makes P1 an important visual marker. Using genome-wide expression analyses (RNA sequencing) in pericarps and silks of plants with contrasting P1 alleles combined with chromatin immunoprecipitation coupled with high-throughput sequencing, we show here that the regulatory functions of P1 are much broader than the activation of genes corresponding to enzymes in a branch of flavonoid biosynthesis. P1 modulates the expression of several thousand genes, and ∼1500 of them were identified as putative direct targets of P1. Among them, we identified F2H1, corresponding to a P450 enzyme that converts naringenin into 2-hydroxynaringenin, a key branch point in the P1-controlled pathway and the first step in the formation of insecticidal C-glycosyl flavones. Unexpectedly, the binding of P1 to gene regulatory regions can result in both gene activation and repression. Our results indicate that P1 is the major regulator for a set of genes involved in flavonoid biosynthesis and a minor modulator of the expression of a much larger gene set that includes genes involved in primary metabolism and production of other specialized compounds.","tags":null,"title":"A genome-wide regulatory framework identifies maize pericarp color1 controlled genes.","type":"publication"},{"authors":["Amit Sharma","Alper Yilmaz","Kim Marsh","Alan Cochrane","Kathleen Boris-Lawrie"],"categories":null,"content":"","date":1325368800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325368800,"objectID":"88b2eb2fc01ab3b61cb68e2ebaa1d444","permalink":"/publication/sharma-2012-id-221/","publishdate":"2012-01-01T00:00:00+02:00","relpermalink":"/publication/sharma-2012-id-221/","section":"publication","summary":"Translation is a regulated process and is pivotal to proper cell growth and homeostasis. All retroviruses rely on the host translational machinery for viral protein synthesis and thus may be susceptible to its perturbation in response to stress, co-infection, and/or cell cycle arrest. HIV-1 infection arrests the cell cycle in the G2/M phase, potentially disrupting the regulation of host cell translation. In this study, we present evidence that HIV-1 infection downregulates translation in lymphocytes, attributable to the cell cycle arrest induced by the HIV-1 accessory protein Vpr. The molecular basis of the translation suppression is reduced accumulation of the active form of the translation initiation factor 4E (eIF4E). However, synthesis of viral structural proteins is sustained despite the general suppression of protein production. HIV-1 mRNA translation is sustained due to the distinct composition of the HIV-1 ribonucleoprotein complexes. RNA-coimmunoprecipitation assays determined that the HIV-1 unspliced and singly spliced transcripts are predominantly associated with nuclear cap binding protein 80 (CBP80) in contrast to completely-spliced viral and cellular mRNAs that are associated with eIF4E. The active translation of the nuclear cap binding complex (CBC)-bound viral mRNAs is demonstrated by ribosomal RNA profile analyses. Thus, our findings have uncovered that the maintenance of CBC association is a novel mechanism used by HIV-1 to bypass downregulation of eIF4E activity and sustain viral protein synthesis. We speculate that a subset of CBP80-bound cellular mRNAs contribute to recovery from significant cellular stress, including human retrovirus infection.","tags":null,"title":"Thriving under stress: selective translation of HIV-1 structural protein mRNA during Vpr-mediated impairment of eIF4E translation activity.","type":"publication"},{"authors":null,"categories":null,"content":"Here\u0026rsquo;s the matrix that we\u0026rsquo;ll be using:\n$ paste \u0026lt;(seq 1 5) \u0026lt;(seq 12 16) 1\t12 2\t13 3\t14 4\t15 5\t16  Now, let\u0026rsquo;s use a perl one-liner with nested maps to transpose the matrix:\n$ paste \u0026lt;(seq 1 5) \u0026lt;(seq 12 16) | perl -ane 'push @matrix,[@F]; END { print join \u0026quot;\\n\u0026quot;,map {$row=$_; join\u0026quot;\\t\u0026quot;,map { $matrix[$_][$row]} 0 .. $#matrix } 0 .. $#{$matrix[0]}; print \u0026quot;\\n\u0026quot; }' 1\t2\t3\t4\t5 12\t13\t14\t15\t16  I got the idea from this blog post, but I slightly modified it so that you don\u0026rsquo;t need to make a copy of the transposed array (to save memory)\n","date":1310031217,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1310031217,"objectID":"fd8b7ad3bc09fe5001a663e7f827c162","permalink":"/blog/2011/07/07/transpose-a-matrix-with-perl-nested-map/","publishdate":"2011-07-07T09:33:37Z","relpermalink":"/blog/2011/07/07/transpose-a-matrix-with-perl-nested-map/","section":"post","summary":"Here\u0026rsquo;s the matrix that we\u0026rsquo;ll be using:\n$ paste \u0026lt;(seq 1 5) \u0026lt;(seq 12 16) 1\t12 2\t13 3\t14 4\t15 5\t16  Now, let\u0026rsquo;s use a perl one-liner with nested maps to transpose the matrix:\n$ paste \u0026lt;(seq 1 5) \u0026lt;(seq 12 16) | perl -ane 'push @matrix,[@F]; END { print join \u0026quot;\\n\u0026quot;,map {$row=$_; join\u0026quot;\\t\u0026quot;,map { $matrix[$_][$row]} 0 .. $#matrix } 0 .. $#{$matrix[0]}; print \u0026quot;\\n\u0026quot; }' 1\t2\t3\t4\t5 12\t13\t14\t15\t16  I got the idea from this blog post, but I slightly modified it so that you don\u0026rsquo;t need to make a copy of the transposed array (to save memory)","tags":["commandline","one-liner","perl"],"title":"Transpose a matrix with perl nested map","type":"post"},{"authors":null,"categories":null,"content":"Let\u0026rsquo;s assume you have an array of numbers and you want to extract intervals from this array. For example, from such an array: 2,3,4,5,8,9,10,11,12,15,18,19,20 you should be getting (2-5), (8-12), (18-20) as intervals.\nMore bioinformatic case: Let\u0026rsquo;s assume you ran samtools pileup format and want to extract intervals from the genomic coordinates that has at least one hit.\nThe following one-liner will give you what you want: (I used seq to generate array of numbers and concatenated multiple seq)\ncat \u0026lt;(seq 3 23) \u0026lt;(echo 25) \u0026lt;(seq 40 50) | perl -ne 'BEGIN{our $i=1}; chomp ; if(($_ - (${$hash-\u0026gt;{$i-1}}[-1]))==1){push @{$hash-\u0026gt;{$i-1}},$_}else{push @{$hash-\u0026gt;{$i++}},$_}; END {print join\u0026quot;\\n\u0026quot;, map {${$hash-\u0026gt;{$_}}[0].\u0026quot;\\t\u0026quot;.${$hash-\u0026gt;{$_}}[-1]} grep { scalar(@{$hash-\u0026gt;{$_}}) \u0026gt; 1} sort {$a \u0026lt;=\u0026gt; $b} keys %$hash; print \u0026quot;\\n\u0026quot;}'  And the result is:\n3\t23 40\t50  map was used to get first and last element of array, grep is used to filter out arrays that has less than 2 elements.\n","date":1309157882,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1309157882,"objectID":"708350ac2b558e5719f3885ee588e9c3","permalink":"/blog/2011/06/27/extract-intervals-from-an-array-of-numbers/","publishdate":"2011-06-27T06:58:02Z","relpermalink":"/blog/2011/06/27/extract-intervals-from-an-array-of-numbers/","section":"post","summary":"Let\u0026rsquo;s assume you have an array of numbers and you want to extract intervals from this array. For example, from such an array: 2,3,4,5,8,9,10,11,12,15,18,19,20 you should be getting (2-5), (8-12), (18-20) as intervals.\nMore bioinformatic case: Let\u0026rsquo;s assume you ran samtools pileup format and want to extract intervals from the genomic coordinates that has at least one hit.\n","tags":["commandline","one-liner","perl"],"title":"Extract intervals from an array of numbers","type":"post"},{"authors":null,"categories":null,"content":"Soon after SAM/BAM format became standard for short-read alignment softwares, high caliber tools have been emerging that can process the widely accepted format. bedtools is one of them and it\u0026rsquo;s easy to use and flexible. Most importantly you can integrate it with commandline pipes.\nIn this post, I\u0026rsquo;ll be describing how to extract upstream region sequences with the help of bedtools. I\u0026rsquo;ll be using the following files in my sample:\nFile1: small-chr-genes.bed (holds locations of genes)\n1\t10\t20\tgene1\t0\t+ 1\t40\t50\tgene2\t0\t-  File2: small-chr.fa (genome sequence file)\n\u0026gt;1 GCGACTACGACTACAGCACTACGACATCAGCACTACGACT ACGACTACGACATCACGACACACGACGACATCACGACTAC  File3: small-chr.genome (genome file which contains name and length of each chromosome)\n1\t80  The one-liner below extracts 5 basepairs upstream region for each gene and slopBed takes care of strand issues (reverse complement of extracted sequence if gene is on negative strand) and genome size issues (trim the extracted sequence if gene is close to beginning or end of chromosome).\nslopBed -i small-chr-genes.bed -g small-chr.genome -l 5 -r 0 -s | perl -ane '($F[5] eq \u0026quot;+\u0026quot;)? $F[2]=$F[1] : $F[1]=$F[2]; print join\u0026quot;\\t\u0026quot;,@F;print\u0026quot;\\n\u0026quot;' | slopBed -i stdin -g small-chr.genome -l 0 -r 5 -s | fastaFromBed -fi small-chr.fa -bed stdin -fo stdout -name -s  The output looks like this:\n\u0026gt;gene1 TACGA \u0026gt;gene2 TGATG  Let me try to explain how it works, first I extend each gene 5 basepair to its upstream. Then I mark the beginning of the extended region by converting it into single nucleotide region. I use slopBed again, to extend from the mark in opposite direction for 5 basepairs. Now we have the upstream region start and end coordinates, and by the help of fastaFromBed, the upstream region sequence was extracted from genome sequence.\nbedtools has a tool named subtractBed and I was thinking that combination of slopBed, subtractBed and fastaFromBed should be the solution. However, probably due to genes that are overlapping, subtracting gene region from extended region didn\u0026rsquo;t work as well as I expected. That\u0026rsquo;s why I integrated a perl one-liner to take care of subtracting the gene region from extended region.\nUpdate : bedtools developer Aaron Quinlan was kind enough to develop a new tool to accomplish the task described above. \u0026ldquo;flankBed\u0026rdquo; does exactly what is described above and it\u0026rsquo;s much simpler. Here\u0026rsquo;s the flankBed equivalent of extracting upstream regions:\nflankBed -i small-chr-genes.bed -g small-chr.genome -l 5 -r 0 -s | fastaFromBed -fi small-chr.fa -bed stdin -fo stdout -name -s  ","date":1299400836,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1299400836,"objectID":"e5410ea86f4a22560b3be63eb25f0842","permalink":"/blog/2011/03/06/extract-upstream-region-sequence-with-bedtools/","publishdate":"2011-03-06T08:40:36Z","relpermalink":"/blog/2011/03/06/extract-upstream-region-sequence-with-bedtools/","section":"post","summary":"Soon after SAM/BAM format became standard for short-read alignment softwares, high caliber tools have been emerging that can process the widely accepted format. bedtools is one of them and it\u0026rsquo;s easy to use and flexible. Most importantly you can integrate it with commandline pipes.\nIn this post, I\u0026rsquo;ll be describing how to extract upstream region sequences with the help of bedtools. I\u0026rsquo;ll be using the following files in my sample:","tags":["bioinformatics","one-liner","perl"],"title":"Extract upstream region sequence with bedtools","type":"post"},{"authors":["Alper Yilmaz","Maria Katherine Mejia-Guerra","Kyle Kurz","Xiaoyu Liang","Lonnie Welch","Erich Grotewold"],"categories":null,"content":"","date":1293832800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1293832800,"objectID":"53fcb4514552ef78ca30b01c6763f0d2","permalink":"/publication/yilmaz-2011-id-115/","publishdate":"2011-01-01T00:00:00+02:00","relpermalink":"/publication/yilmaz-2011-id-115/","section":"publication","summary":"The Arabidopsis Gene Regulatory Information Server (AGRIS; http://arabidopsis.med.ohio-state.edu/) provides a comprehensive resource for gene regulatory studies in the model plant Arabidopsis thaliana. Three interlinked databases, AtTFDB, AtcisDB and AtRegNet, furnish comprehensive and updated information on transcription factors (TFs), predicted and experimentally verified cis-regulatory elements (CREs) and their interactions, respectively. In addition to significant contributions in the identification of the entire set of TF-DNA interactions, which are the key to understand the gene regulatory networks that govern Arabidopsis gene expression, tools recently incorporated into AGRIS include the complete set of words length 5-15 present in the Arabidopsis genome and the integration of AtRegNet with visualization tools, such as the recently developed ReIN application. All the information in AGRIS is publicly available and downloadable upon registration.","tags":null,"title":"AGRIS: the Arabidopsis Gene Regulatory Information Server, an update.","type":"publication"},{"authors":["Jens Lichtenberg","Alper Yilmaz","Kyle Kurz","Xiaoyu Liang","Chase Nelson","Thomas Bitterman","Eric Stockinger","Erich Grotewold","Lonnie R. Welch"],"categories":null,"content":"","date":1293832800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1293832800,"objectID":"5bffcd5babcfc4f2f03abc93337ba80c","permalink":"/publication/lichtenberg-2011-id-219/","publishdate":"2011-01-01T00:00:00+02:00","relpermalink":"/publication/lichtenberg-2011-id-219/","section":"publication","summary":"","tags":null,"title":"Encyclopedias of DNA Elements for Plant Genomes","type":"publication"},{"authors":["Ethalinda K S Cannon","Scott M Birkett","Bremen L Braun","Sateesh Kodavali","Douglas M Jennewein","Alper Yilmaz","Valentin Antonescu","Corina Antonescu","Lisa C Harper","Jack M Gardiner","Mary L Schaeffer","Darwin A Campbell","Carson M Andorf","Destri Andorf","Damon Lisch","Karen E Koch","Donald R McCarty","John Quackenbush","Erich Grotewold","Carol M Lushbough","Taner Z Sen","Carolyn J Lawrence"],"categories":null,"content":"","date":1293832800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1293832800,"objectID":"513e317302e73583695d13e47a255fd5","permalink":"/publication/cannon-2011-id-220/","publishdate":"2011-01-01T00:00:00+02:00","relpermalink":"/publication/cannon-2011-id-220/","section":"publication","summary":"The purpose of the online resource presented here, POPcorn (Project Portal for corn), is to enhance accessibility of maize genetic and genomic resources for plant biologists. Currently, many online locations are difficult to find, some are best searched independently, and individual project websites often degrade over time-sometimes disappearing entirely. The POPcorn site makes available (1) a centralized, web-accessible resource to search and browse descriptions of ongoing maize genomics projects, (2) a single, stand-alone tool that uses web Services and minimal data warehousing to search for sequence matches in online resources of diverse offsite projects, and (3) a set of tools that enables researchers to migrate their data to the long-term model organism database for maize genetic and genomic information: MaizeGDB. Examples demonstrating POPcorn's utility are provided herein.","tags":null,"title":"POPcorn: An Online Resource Providing Access to Distributed and Diverse Maize Project Data.","type":"publication"},{"authors":null,"categories":null,"content":"In this post, I\u0026rsquo;ll demonstrate how to use gnuplot in a one-liner. We\u0026rsquo;ll use the pipe but unfortunately you cannot pipe raw data to gnuplot directly (as far as I know). The piped data should contain basic gnuplot commands on top. So, we\u0026rsquo;ll use the following template:\nvery-complicated-data-generating-commands | sed -e \u0026quot;1i\\plot '-' \u0026quot; | gnuplot -persist  If you\u0026rsquo;re interested in quickly see how this works, try something simple:\nseq 1 10 | sed -e \u0026quot;1i\\plot '-'\u0026quot; | gnuplot -persist  Before sed command, you can write as complicated as possible command to generate data and inside sed command you can put long gnuplot commands to obtain graphs. Let\u0026rsquo;s see the counts of most used 20 commands from history (mentioned in an earlier post with bar chart.\ncat ~/.bash_history|grep -v \u0026quot;^#\u0026quot; | perl -F\u0026quot;\\||\u0026lt;\\(|;|\\`|\\\\$\\(\u0026quot; -alne 'foreach (@F) { print $1 if /^.*?(\\w+)\\b/i }' | sort | uniq -c | sort -nr | head -20 | awk '{print $2\u0026quot;\\t\u0026quot;$1}' | sed -e \u0026quot;1i\\set boxwidth 0.5\\nset style fill solid noborder\\nset xtics nomirror rotate by -60\\nset format x '-%s'\\nplot '-' using 2:xticlabels(1) with boxes notitle\u0026quot; | gnuplot -persist  Resulting image looks like this:\nIf you want to save the output in png format, what you do is simply add the command set term png size 600,300 to your one-liner. I chose width 600px and height 300px as example. In this case, gnuplot prints the contents of png file to screen, so we need to direct it to a filename, as shown below:\ncat ~/.bash_history|grep -v \u0026quot;^#\u0026quot; | perl -F\u0026quot;\\||\u0026lt;\\(|;|\\`|\\\\$\\(\u0026quot; -alne 'foreach (@F) { print $1 if /^.*?(\\w+)\\b/i }' | sort | uniq -c | sort -nr | head -20 | awk '{print $2\u0026quot;\\t\u0026quot;$1}' | sed -e \u0026quot;1i\\set term png size 600,350\\nset boxwidth 0.5\\nset style fill solid noborder\\nset xtics nomirror rotate by -60\\nset format x '-%s'\\nplot '-' using 2:xticlabels(1) with boxes notitle\u0026quot; | gnuplot \u0026gt; sample_image.png  ","date":1287267204,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1287267204,"objectID":"49a52ca096ec4b11f16c381d92dfba92","permalink":"/blog/2010/10/16/plot-one-liner-generated-data-with-gnuplot/","publishdate":"2010-10-16T22:13:24Z","relpermalink":"/blog/2010/10/16/plot-one-liner-generated-data-with-gnuplot/","section":"post","summary":"In this post, I\u0026rsquo;ll demonstrate how to use gnuplot in a one-liner. We\u0026rsquo;ll use the pipe but unfortunately you cannot pipe raw data to gnuplot directly (as far as I know). The piped data should contain basic gnuplot commands on top. So, we\u0026rsquo;ll use the following template:\nvery-complicated-data-generating-commands | sed -e \u0026quot;1i\\plot '-' \u0026quot; | gnuplot -persist  If you\u0026rsquo;re interested in quickly see how this works, try something simple:","tags":["commandline","gnuplot","one-liner","visualization"],"title":"Plot one-liner generated data with gnuplot","type":"post"},{"authors":null,"categories":null,"content":"In an earlier post we learned how to use Bio::SeqIO module to process fasta files with one-liner. Let\u0026rsquo;s do more with this capability. What about selecting random sequences from a fasta file?\nTo achieve that, we\u0026rsquo;ll load the fasta file contents into a hash and then utilize the fact that rand(@array) returns index of a random element from that array.\nLet\u0026rsquo;s pick 100 random sequences from a fasta file with one-liner:\n.. fasta file stream .. | perl -MBio::SeqIO -e '$seq=Bio::SeqIO-\u0026gt;new(-fh =\u0026gt; \\*STDIN);while ($myseq=$seq-\u0026gt;next_seq){ $hash{$myseq-\u0026gt;id}=$myseq-\u0026gt;seq }; END{@ids = keys %hash; foreach (1..100){my $index=rand(@ids); print \u0026quot;\u0026gt;\u0026quot;,$ids[$index],\u0026quot;\\n\u0026quot;,$hash{$ids[$index]},\u0026quot;\\n\u0026quot; } }'  UPDATE: If this one-liner throws problem about first sequence, please indicate the format of the input. Since read ahead is not possible in a pipe, the format might not be guessed correctly. So, please update the one-liner with this: $seq=Bio::SeqIO-\u0026gt;new(-fh =\u0026gt; \\*STDIN, -format=\u0026gt;\u0026quot;fasta\u0026quot;)\n","date":1279181033,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1279181033,"objectID":"62d845b6362a07a79869be84cb2dbdd1","permalink":"/blog/2010/07/15/perl-one-liner-to-pick-random-sequences-from-fasta-file/","publishdate":"2010-07-15T08:03:53Z","relpermalink":"/blog/2010/07/15/perl-one-liner-to-pick-random-sequences-from-fasta-file/","section":"post","summary":"In an earlier post we learned how to use Bio::SeqIO module to process fasta files with one-liner. Let\u0026rsquo;s do more with this capability. What about selecting random sequences from a fasta file?\nTo achieve that, we\u0026rsquo;ll load the fasta file contents into a hash and then utilize the fact that rand(@array) returns index of a random element from that array.\nLet\u0026rsquo;s pick 100 random sequences from a fasta file with one-liner:","tags":["bioinformatics","one-liner","perl"],"title":"perl one-liner to pick random sequences from fasta file","type":"post"},{"authors":null,"categories":null,"content":"perl5i project explains itself as \u0026ldquo;Perl 5 has a lot of warts, fix as much of it as possible in one pragma\u0026rdquo;. You can run your scripts with it by including perl5i (ie, use perl5i;). Best part is, it can be run at commandline with $ perl5i -e .\nperl5i includes Autobox module which lets you call methods on primitive datatypes such as scalars and arrays (eg. \u0026ldquo;hello world\u0026rdquo;-\u0026gt;print). This feature allows constructing very compact one-liners as shown below:\nperl5i -e 'my @arr = ( 1 .. 10 ); @arr-\u0026gt;map(sub {$_ ** 4 })-\u0026gt;grep(sub { $_ \u0026gt; 3 })-\u0026gt;sum-\u0026gt;say'  Explanation: calculate to the 4th power for each element of @arr. Of those 4th power numbers, filter out the ones smaller than 3. Then sum up the new array and print the result.\nperl5i -e 'my @test=(1,2,3,4); my @compare=(2,4,6); @test-\u0026gt;intersect(\\@compare)-\u0026gt;size-\u0026gt;concat(\u0026quot;\\t\u0026quot;)-\u0026gt;print'  Explanation: Find the intersection of two arrays (assigned to new array) and add tab character to size of (intersection) array and then print it.\nperl5i -e ' my $hashref = { foo =\u0026gt; 10, bar =\u0026gt; 20, baz =\u0026gt; 30, quux =\u0026gt; 40 }; $hashref-\u0026gt;values-\u0026gt;sort-\u0026gt;join(\u0026quot;-\u0026quot;)-\u0026gt;say'  Explanation: sort the values of hash and print them by joining with \u0026ldquo;-\u0026rdquo; character.\n","date":1272325685,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1272325685,"objectID":"bb86579a161a23614b5a9532b854fee7","permalink":"/blog/2010/04/26/way-more-practical-one-liners-with-perl5i/","publishdate":"2010-04-26T23:48:05Z","relpermalink":"/blog/2010/04/26/way-more-practical-one-liners-with-perl5i/","section":"post","summary":"perl5i project explains itself as \u0026ldquo;Perl 5 has a lot of warts, fix as much of it as possible in one pragma\u0026rdquo;. You can run your scripts with it by including perl5i (ie, use perl5i;). Best part is, it can be run at commandline with $ perl5i -e .\nperl5i includes Autobox module which lets you call methods on primitive datatypes such as scalars and arrays (eg. \u0026ldquo;hello world\u0026rdquo;-\u0026gt;print). This feature allows constructing very compact one-liners as shown below:","tags":["one-liner","perl"],"title":"Way more practical one-liners with perl5i","type":"post"},{"authors":null,"categories":null,"content":"When I was trying to generate an image containing scatter-plot and a barchart with error bars, I got stuck with barchart part. There were no demos or samples that produces the desired output. So, I ended up figuring it out myself.\nBelow is the gnuplot code, data sample and the output.\nset term png size 500,400 set output \u0026quot;boxerror-test.png\u0026quot; set boxwidth 0.5 set style fill transparent solid 0.5 noborder set yrange [0:100] set xrange [0:5] plot \u0026quot;boxerror-test.data\u0026quot; using 1:2:3:xticlabels(4) w boxerror lc rgb \u0026quot;#444444\u0026quot; lw 1.5 title \u0026quot;BoxerrorTest\u0026quot;  Sample data:\n1\t25\t3\tA 2\t33\t5\tB 3\t50\t2\tC 4\t12\t0.5\tD  And the final output:\nIdeally, I was trying to plot the following data:\nA 25 3 B 33 5 C 50 2 D 12 0.5  But I wasn\u0026rsquo;t able to use first column directly as data. So, first column is actually numbers and fourth column provides the xticlabels.\nIf your gnuplot version is less than 4.4, transparency won\u0026rsquo;t work, in that case remove \u0026ldquo;transparent\u0026rdquo; from set style line.\n","date":1271255486,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1271255486,"objectID":"e447874ac2871b0996ea16ab5a31bfd9","permalink":"/blog/2010/04/14/gnuplot-boxerror-barchart-with-error-bars/","publishdate":"2010-04-14T14:31:26Z","relpermalink":"/blog/2010/04/14/gnuplot-boxerror-barchart-with-error-bars/","section":"post","summary":"When I was trying to generate an image containing scatter-plot and a barchart with error bars, I got stuck with barchart part. There were no demos or samples that produces the desired output. So, I ended up figuring it out myself.\nBelow is the gnuplot code, data sample and the output.\nset term png size 500,400 set output \u0026quot;boxerror-test.png\u0026quot; set boxwidth 0.5 set style fill transparent solid 0.5 noborder set yrange [0:100] set xrange [0:5] plot \u0026quot;boxerror-test.","tags":["gnuplot","visualization"],"title":"gnuplot boxerror, barchart with error bars","type":"post"},{"authors":null,"categories":null,"content":"Most of the \u0026ldquo;most used commands\u0026rdquo; approaches does not consider pipes and other complexities.\nThis approach considers pipes, process substitution by backticks or $() and multiple commands separated by ;\nPerl regular expression breaks up each line using | or \u0026lt;( or ; or ` or $( and picks the first word (excluding \u0026ldquo;do\u0026rdquo; in case of for loops)\nhistory | perl -F\u0026quot;\\||\u0026lt;\\(|;|\\`|\\\\$\\(\u0026quot; -alne 'foreach (@F) { print $1 if /\\b((?!do)[a-z]+)\\b/i }' | sort | uniq -c | sort -nr | head  Let\u0026rsquo;s generate a fake history file which looks like this:\n1 command file | command file | command | command 2 command \u0026lt;(command file) \u0026lt;(command file) 3 command file \u0026gt; file 4 for i in `command file`; do command file; command file; done | command 5 for i in $(command file); do command file; command file | command; done  This approach successfully counts 16 occurrences of \u0026ldquo;command\u0026rdquo; and 2 occurrences of \u0026ldquo;for\u0026rdquo;.\nNote: if you are using lots of perl one-liners, the perl commands/functions will be counted as well in this approach, since semicolon is used as a separator\n","date":1270717913,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1270717913,"objectID":"59b6944e8bc4b2ed12890e6eb95e1f37","permalink":"/blog/2010/04/08/most-used-commands-in-history/","publishdate":"2010-04-08T09:11:53Z","relpermalink":"/blog/2010/04/08/most-used-commands-in-history/","section":"post","summary":"Most of the \u0026ldquo;most used commands\u0026rdquo; approaches does not consider pipes and other complexities.\nThis approach considers pipes, process substitution by backticks or $() and multiple commands separated by ;\nPerl regular expression breaks up each line using | or \u0026lt;( or ; or ` or $( and picks the first word (excluding \u0026ldquo;do\u0026rdquo; in case of for loops)\nhistory | perl -F\u0026quot;\\||\u0026lt;\\(|;|\\`|\\\\$\\(\u0026quot; -alne 'foreach (@F) { print $1 if /\\b((?","tags":["linux","one-liner","perl"],"title":"Most used commands in history","type":"post"},{"authors":null,"categories":null,"content":"Circos is a very powerful tool to visualize different types of data (expression, homology, etc) in circular fashion.\nThe software is capable of producing very large images if desired, suitable for posters.\nActually, we can create large images for viewing online, since it\u0026rsquo;s trivial to view them with Seadragon.\nBelow is an example from Circos tutorial (I modified the config file to obtain large image) (*EDIT: Since the seadragon page was very slow to respond, I just included the embed URL*S)\n\u0026lt;script src=\u0026quot;http://seadragon.com/embed/yhz.js?width=auto\u0026amp;height=400px\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;  Original image is located here.\nPS: Author of Circos, Martin Krzywinski has more interesting software listed in his page. And his lecture notes on Data Mining and Analysis at the Command Line is worth checking.\n","date":1270226081,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1270226081,"objectID":"7aeb0916d41afb175095cc1461b0eff0","permalink":"/blog/2010/04/02/visualize-circos-images-with-seadragon/","publishdate":"2010-04-02T16:34:41Z","relpermalink":"/blog/2010/04/02/visualize-circos-images-with-seadragon/","section":"post","summary":"Circos is a very powerful tool to visualize different types of data (expression, homology, etc) in circular fashion.\nThe software is capable of producing very large images if desired, suitable for posters.\nActually, we can create large images for viewing online, since it\u0026rsquo;s trivial to view them with Seadragon.\nBelow is an example from Circos tutorial (I modified the config file to obtain large image) (*EDIT: Since the seadragon page was very slow to respond, I just included the embed URL*S)","tags":["bioinformatics","visualization"],"title":"Visualize Circos images with Seadragon","type":"post"},{"authors":null,"categories":null,"content":"Let\u0026rsquo;s assume we have a file with five columns where first column is text and rest of the columns are numeric. How can we calculate the standard deviation (or other statistical functions) with a perl one-liner?\nWe\u0026rsquo;ll use Statistics::Descriptive module.\nperl -MStatistics::Descriptive -ane 'BEGIN{our $stat = Statistics::Descriptive::Full-\u0026gt;new}; $stat-\u0026gt;add_data(@F[1..4]); print $stat-\u0026gt;standard_deviation,\u0026quot;\\n\u0026quot;; $stat-\u0026gt;clear' filename  $stat-\u0026gt;clear at the end was needed since data is added not assigned to $stat each time, so in order to prevent cumulative calculation, $stat variable should be cleared each time.\n","date":1270213552,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1270213552,"objectID":"ca275b1e878723efc5b36a306cfaf59c","permalink":"/blog/2010/04/02/one-line-statistics/","publishdate":"2010-04-02T13:05:52Z","relpermalink":"/blog/2010/04/02/one-line-statistics/","section":"post","summary":"Let\u0026rsquo;s assume we have a file with five columns where first column is text and rest of the columns are numeric. How can we calculate the standard deviation (or other statistical functions) with a perl one-liner?\nWe\u0026rsquo;ll use Statistics::Descriptive module.\nperl -MStatistics::Descriptive -ane 'BEGIN{our $stat = Statistics::Descriptive::Full-\u0026gt;new}; $stat-\u0026gt;add_data(@F[1..4]); print $stat-\u0026gt;standard_deviation,\u0026quot;\\n\u0026quot;; $stat-\u0026gt;clear' filename  $stat-\u0026gt;clear at the end was needed since data is added not assigned to $stat each time, so in order to prevent cumulative calculation, $stat variable should be cleared each time.","tags":["one-liner","perl"],"title":"One line statistics","type":"post"},{"authors":null,"categories":null,"content":"Maybe you already watched the video regarding Seadragon given at TED (sorry only low resolution version was available)\n  I just discovered that you can embed Seadragon into your own page. If you want to embed an image with enormous size, go to Seadragon page and paste URL of the image and it will create html embed script which you insert into your page\u0026rsquo;s html code.\nBelow is the Seadragon view of space image of world at night: (*EDIT: Since the seadragon page was very slow to respond, I just included the embed URL*S)\n\u0026lt;script src=\u0026quot;http://seadragon.com/embed/82q.js?width=auto\u0026amp;height=400px\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;  Original image is located here.\nHere\u0026rsquo;s another example (satellite image of Turkey):\n\u0026lt;script src=\u0026quot;http://seadragon.com/embed/yf4.js?width=auto\u0026amp;height=400px\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;  Original image is located here.\n","date":1270093800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1270093800,"objectID":"83653d99f9f0a46789de77033079d7a5","permalink":"/blog/2010/04/01/view-large-images-with-seadragon-in-personal-pages/","publishdate":"2010-04-01T03:50:00Z","relpermalink":"/blog/2010/04/01/view-large-images-with-seadragon-in-personal-pages/","section":"post","summary":"Maybe you already watched the video regarding Seadragon given at TED (sorry only low resolution version was available)\n  I just discovered that you can embed Seadragon into your own page. If you want to embed an image with enormous size, go to Seadragon page and paste URL of the image and it will create html embed script which you insert into your page\u0026rsquo;s html code.\nBelow is the Seadragon view of space image of world at night: (*EDIT: Since the seadragon page was very slow to respond, I just included the embed URL*S)","tags":["visualization"],"title":"View large images with Seadragon in personal pages","type":"post"},{"authors":null,"categories":null,"content":"Need a practical way to process fasta files with Bio::SeqIO module ? Below code will print sequence id and sequence length with tab per line.\nperl -MBio::SeqIO -e '$seq=Bio::SeqIO-\u0026gt;new(-fh =\u0026gt; \\*STDIN);while ($myseq=$seq-\u0026gt;next_seq){print $myseq-\u0026gt;id,\u0026quot;\\t\u0026quot;,$myseq-\u0026gt;length,\u0026quot;\\n\u0026quot;;}' \u0026lt; filename  OR\ncat filename | perl -MBio::SeqIO -e '$seq=Bio::SeqIO-\u0026gt;new(-fh =\u0026gt; \\*STDIN);while ($myseq=$seq-\u0026gt;next_seq){print $myseq-\u0026gt;id,\u0026quot;\\t\u0026quot;,$myseq-\u0026gt;length,\u0026quot;\\n\u0026quot;;}'  There are many more methods to use from Bio::Seq, such as revcom, translate, subseq(start,end), primary_id, desc, etc.\nPiped file does not need to be in Fasta format, there are many other formats (listed here) which SeqIO can parse successfully.\n UPDATE: If you are using this one-liner in a pipe, you might need to declare the format so that the stream is processed correctly. Also, in order to retrieve Bio::Seq methods, please use \u0026ldquo;-\u0026gt;seq\u0026rdquo; to access the final sequence.\nConsidering all these updates, the one-liner should look like this:\n perl -MBio::SeqIO -e '$seq=Bio::SeqIO-\u0026gt;new(-fh =\u0026gt; \\*STDIN,-format=\u0026gt;\u0026quot;fasta\u0026quot;);while ($myseq=$seq-\u0026gt;next_seq){print $myseq-\u0026gt;id,\u0026quot;\\t\u0026quot;,$myseq-\u0026gt;length,\u0026quot;\\t\u0026quot;,$myseq-\u0026gt;seq,\u0026quot;\\t\u0026quot;,$myseq-\u0026gt;translate-\u0026gt;seq,\u0026quot;\\n\u0026quot;;}'  ","date":1270089837,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1270089837,"objectID":"77af948bcf51ad2d0824516e27f68ef9","permalink":"/blog/2010/04/01/perl-one-liner-to-process-sequence-files-in-stream/","publishdate":"2010-04-01T02:43:57Z","relpermalink":"/blog/2010/04/01/perl-one-liner-to-process-sequence-files-in-stream/","section":"post","summary":"Need a practical way to process fasta files with Bio::SeqIO module ? Below code will print sequence id and sequence length with tab per line.\nperl -MBio::SeqIO -e '$seq=Bio::SeqIO-\u0026gt;new(-fh =\u0026gt; \\*STDIN);while ($myseq=$seq-\u0026gt;next_seq){print $myseq-\u0026gt;id,\u0026quot;\\t\u0026quot;,$myseq-\u0026gt;length,\u0026quot;\\n\u0026quot;;}' \u0026lt; filename  OR\ncat filename | perl -MBio::SeqIO -e '$seq=Bio::SeqIO-\u0026gt;new(-fh =\u0026gt; \\*STDIN);while ($myseq=$seq-\u0026gt;next_seq){print $myseq-\u0026gt;id,\u0026quot;\\t\u0026quot;,$myseq-\u0026gt;length,\u0026quot;\\n\u0026quot;;}'  There are many more methods to use from Bio::Seq, such as revcom, translate, subseq(start,end), primary_id, desc, etc.\nPiped file does not need to be in Fasta format, there are many other formats (listed here) which SeqIO can parse successfully.","tags":["bioinformatics","one-liner","perl"],"title":"perl one-liner to process sequence files in stream","type":"post"},{"authors":null,"categories":null,"content":"Very nice perl one-liner using map, sort and array range to show top ten occurrences\nTaken from Tech@Sakana blog\nperl -ane '$c{$F[0]}++; END {print map {$_ . \u0026quot;\\t-\u0026gt;\\t\u0026quot; . $c{$_} . \u0026quot;\\n\u0026quot;} (sort {$c{$b} \u0026lt;=\u0026gt; $c{$a}} keys %c)[0..9]}' filename  Same thing can be achieved by:\nsort filename | uniq -c | sort -nr | head  But the perl one-liner demonstrates the nice combination of sort and map.\n","date":1269957379,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1269957379,"objectID":"503d8633e83649476190b190a41072d6","permalink":"/blog/2010/03/30/top-ten-occurrences-with-perl-one-liner/","publishdate":"2010-03-30T13:56:19Z","relpermalink":"/blog/2010/03/30/top-ten-occurrences-with-perl-one-liner/","section":"post","summary":"Very nice perl one-liner using map, sort and array range to show top ten occurrences\nTaken from Tech@Sakana blog\nperl -ane '$c{$F[0]}++; END {print map {$_ . \u0026quot;\\t-\u0026gt;\\t\u0026quot; . $c{$_} . \u0026quot;\\n\u0026quot;} (sort {$c{$b} \u0026lt;=\u0026gt; $c{$a}} keys %c)[0..9]}' filename  Same thing can be achieved by:\nsort filename | uniq -c | sort -nr | head  But the perl one-liner demonstrates the nice combination of sort and map.","tags":["one-liner","perl"],"title":"Top ten occurrences with perl one-liner","type":"post"},{"authors":null,"categories":null,"content":"I really like one-liners which can do a lot in a single line.. I wanted to share one I just used to arrange a big table.\nIn the list of proteins below, only two proteins are shown, one protein has multiple attributes for 4 categories (InterPro, Cellular Component, Biological Process and Molecular Function). The other thing to notice is that, not all proteins have to have all the attributes, for instance, one protein might miss BiologicalProcess attribute.\n  protein1   Interpro   kinase     protein1   BiologicalProcess   protein folding     protein1   BiologicalProcess   metabolic process     protein1   MolecularFunction   DNA binding     protein1   CellularComponent   membrane     protein2   Interpro   transferase     protein2   Interpro   Methyltransferase     protein2   CellularComponent   membrane     protein2   CellularComponent   integral to membrane    Out of this table, I\u0026rsquo;m trying to get the following table:\n ProteinID  InterPro  Cellular Component  Biological Process  Molecular Function    protein1  kinase  membrane  protein folding; metabolic process  DNA binding    protein2  transferase; Methyltransferase  membrane; integral to membrane      Do you think this is possible with perl one-liner? Yes, it is..\nBelow is the code (suppose that Table 1 is in file called GeneCategories.txt\nperl -F\u0026quot;\\t\u0026quot; -ane 'chomp($F[2]); push @{$hash-\u0026gt;{$F[0]}-\u0026gt;{$F[1]}},$F[2]; END {foreach $id (sort keys %$hash){print $id,\u0026quot;\\t\u0026quot;; foreach $field qw(Interpro CellularComponent BiologicalProcess MolecularFunction){print join \u0026quot;;\u0026quot;,@{$hash-\u0026gt;{$id}-\u0026gt;{$field}}; print \u0026quot;\\t\u0026quot;;}; print \u0026quot;\\n\u0026quot;; } }' GeneCategories.txt  Let\u0026rsquo;s breakdown the code now. As we know, you can run perl code within terminal in this format:\nperl -e 'code'  If you want to run your code in a loop, then -n option should be used. In that case, either a filename should be provided or data should be piped to perl. Auto split can be turned on by -a option which will assign split elements to an array named @F.\nIf I don\u0026rsquo;t indicate that TAB is the separator, then SPACE or TAB is considered as separator. Since my data contains SPACE, I should specifically indicate that TAB is the separator by -F option.\nOne more thing about running perl in commandline with -n option. Suppose you wish to run additional code before and/or after the loop, then you should use the following format:\nperl -ne 'BEGIN {code1}; code2; END {code3}' filename  In this particular example, code1 will run before looping thru lines of filename and code3 will run after loop ended.\nOkay, now the meaning of the actual code:\nchomp($F[2])  Last column contains newline character at the end, I am removing it so that final output is not bad.\npush @{$hash-\u0026gt;{$F[0]}-\u0026gt;{$F[1]}},$F[2]  This is the core part where one protein can have multiple categories (Hash of hash) and one category can hold multiple values in an array (Hash of hash of array). Whatever is in third column is pushed into an array referred by hash of hash $hash-\u0026gt;{ProteinNo}-\u0026gt;{Category}\nAfter loop ended, hash structure is printed and mission accomplished..\n","date":1269481373,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1269481373,"objectID":"01e65e8ec84e82af7fef5a8c184eb883","permalink":"/blog/2010/03/25/perl-one-liner-to-change-table-layout-with-hash-of-hash-of-array/","publishdate":"2010-03-25T01:42:53Z","relpermalink":"/blog/2010/03/25/perl-one-liner-to-change-table-layout-with-hash-of-hash-of-array/","section":"post","summary":"I really like one-liners which can do a lot in a single line.. I wanted to share one I just used to arrange a big table.\nIn the list of proteins below, only two proteins are shown, one protein has multiple attributes for 4 categories (InterPro, Cellular Component, Biological Process and Molecular Function). The other thing to notice is that, not all proteins have to have all the attributes, for instance, one protein might miss BiologicalProcess attribute.","tags":["one-liner","perl"],"title":"perl one-liner to change table layout with Hash-of-Hash-of-Array","type":"post"},{"authors":null,"categories":null,"content":"I have been looking for a solution for broken bash_completion for scp command. I was thinking my ssh was not configured correctly for password-less login. But I just found out that bash completion is broken for Ubuntu 9.10.\nIf you are suffering from same symptom, please read this article for fix.\n","date":1268238603,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1268238603,"objectID":"825d7fc3da9959f6c7a5fb51149cb32d","permalink":"/blog/2010/03/10/bash-completion-for-scp/","publishdate":"2010-03-10T16:30:03Z","relpermalink":"/blog/2010/03/10/bash-completion-for-scp/","section":"post","summary":"I have been looking for a solution for broken bash_completion for scp command. I was thinking my ssh was not configured correctly for password-less login. But I just found out that bash completion is broken for Ubuntu 9.10.\nIf you are suffering from same symptom, please read this article for fix.","tags":["commandline","linux"],"title":"bash completion for scp","type":"post"},{"authors":null,"categories":null,"content":"","date":1264975200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1264975200,"objectID":"6e73f43b5b8746e0eeb42e4685a38c36","permalink":"/publication/unknown-2010-id-217/","publishdate":"2010-02-01T00:00:00+02:00","relpermalink":"/publication/unknown-2010-id-217/","section":"publication","summary":"Three subfamilies of grasses, the Ehrhartoideae, Panicoideae and Pooideae, provide the bulk of human nutrition and are poised to become major sources of renewable energy. Here we describe the genome sequence of the wild grass Brachypodium distachyon (Brachypodium), which is, to our knowledge, the first member of the Pooideae subfamily to be sequenced. Comparison of the Brachypodium, rice and sorghum genomes shows a precise history of genome evolution across a broad diversity of the grasses, and establishes a template for analysis of the large genomes of economically important pooid grasses such as wheat. The high-quality genome sequence, coupled with ease of cultivation and transformation, small size and rapid life cycle, will help Brachypodium reach its potential as an important model system for developing new energy and food crops.","tags":null,"title":"Genome sequencing and analysis of the model grass Brachypodium distachyon.","type":"publication"},{"authors":null,"categories":null,"content":"Posting to WP from commandline is great. Before I post it, I need to lookup available categories so that I can categorize the new post correctly. To prevent a visit to WP admin GUI, I used the same Perl module for posting to retrieve available categories. Below is the code. I hope it helps you too..\nuse WordPress::XMLRPC; my $o = WordPress::XMLRPC-\u0026gt;new({ username =\u0026gt; 'username', password =\u0026gt; 'password', proxy =\u0026gt; 'http://yourblog-address/xmlrpc.php', }); my $categories= $o-\u0026gt;getCategories(); foreach (0..scalar(@$categories)) { print ${$categories}[$_]-\u0026gt;{'categoryId'},\u0026quot;\\t\u0026quot;,${$categories}[$_]-\u0026gt;{'categoryName'}; if (${$categories}[$_]-\u0026gt;{'parentId'} != 0){ print \u0026quot;\\tParentId=\u0026quot;,${$categories}[$_]-\u0026gt;{'parentId'},\u0026quot;\\n\u0026quot;; } else {print \u0026quot;\\n\u0026quot;} }  ","date":1263409695,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1263409695,"objectID":"981545b305b8cee1d2a94c20e3c7c478","permalink":"/blog/2010/01/13/retrieve-wp-categories-from-commandline/","publishdate":"2010-01-13T19:08:15Z","relpermalink":"/blog/2010/01/13/retrieve-wp-categories-from-commandline/","section":"post","summary":"Posting to WP from commandline is great. Before I post it, I need to lookup available categories so that I can categorize the new post correctly. To prevent a visit to WP admin GUI, I used the same Perl module for posting to retrieve available categories. Below is the code. I hope it helps you too..\nuse WordPress::XMLRPC; my $o = WordPress::XMLRPC-\u0026gt;new({ username =\u0026gt; 'username', password =\u0026gt; 'password', proxy =\u0026gt; 'http://yourblog-address/xmlrpc.","tags":["commandline","perl"],"title":"Retrieve WP categories from commandline","type":"post"},{"authors":["Alper Yilmaz","Erich Grotewold"],"categories":null,"content":"","date":1262296800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1262296800,"objectID":"6b81f1bf8cd741108ec7246adb619470","permalink":"/publication/yilmaz-2010-id-218/","publishdate":"2010-01-01T00:00:00+02:00","relpermalink":"/publication/yilmaz-2010-id-218/","section":"publication","summary":"The control of gene expression is a biological process essential to all organisms. This is accomplished through the interaction of regulatory proteins with specific DNA motifs in the control regions of the genes that they regulate. Upon binding to DNA, and through specific protein-protein interactions, these regulatory proteins convey signals to the basal transcriptional machinery, containing the respective RNA polymerases, resulting in particular rates of gene expression. In eukaryotes, in addition and complementary to the binding of regulatory proteins to DNA, chromatin structure plays a role in modulating gene expression. Small RNAs are emerging as key components in this process. This chapter provides an introduction to some of the basic players participating in these processes, the transcription factors and co-regulators, the cis-regulatory elements that often function as transcription factor docking sites, and the emerging role of small RNAs in the regulation of gene expression.","tags":null,"title":"Components and mechanisms of regulation of gene expression.","type":"publication"},{"authors":["Jens Lichtenberg","Alper Yilmaz","Joshua D Welch","Kyle Kurz","Xiaoyu Liang","Frank Drews","Klaus Ecker","Stephen S Lee","Matt Geisler","Erich Grotewold","Lonnie R Welch"],"categories":null,"content":"","date":1254344400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1254344400,"objectID":"bdec2d351a5bdde9f97cb2e89154c74e","permalink":"/publication/lichtenberg-2009-id-214/","publishdate":"2009-10-01T00:00:00+03:00","relpermalink":"/publication/lichtenberg-2009-id-214/","section":"publication","summary":"BACKGROUND: Genome sequences can be conceptualized as arrangements of motifs or words. The frequencies and positional distributions of these words within particular non-coding genomic segments provide important insights into how the words function in processes such as mRNA stability and regulation of gene expression. RESULTS: Using an enumerative word discovery approach, we investigated the frequencies and positional distributions of all 65,536 different 8-letter words in the genome of Arabidopsis thaliana. Focusing on promoter regions, introns, and 3' and 5' untranslated regions (3'UTRs and 5'UTRs), we compared word frequencies in these segments to genome-wide frequencies. The statistically interesting words in each segment were clustered with similar words to generate motif logos. We investigated whether words were clustered at particular locations or were distributed randomly within each genomic segment, and we classified the words using gene expression information from public repositories. Finally, we investigated whether particular sets of words appeared together more frequently than others. CONCLUSION: Our studies provide a detailed view of the word composition of several segments of the non-coding portion of the Arabidopsis genome. Each segment contains a unique word-based signature. The respective signatures consist of the sets of enriched words, 'unwords', and word pairs within a segment, as well as the preferential locations and functional classifications for the signature words. Additionally, the positional distributions of enriched words within the segments highlight possible functional elements, and the co-associations of words in promoter regions likely represent the formation of higher order regulatory modules. This work is an important step toward fully cataloguing the functional elements of the Arabidopsis genome.","tags":null,"title":"The word landscape of the non-coding segments of the Arabidopsis thaliana genome.","type":"publication"},{"authors":["Jens Lichtenberg","Mohit Alam","Thomas Bitterman","Frank Drews","Klaus Ecker","Laura Elnitski","Susan Evans","Matt Geisler","Erich Grotewold","Dazhang Gu","Edwin Jacox","Kyle Kurz","Stephen S. Lee","Xiaoyu Liang","Pooja M. Majmudar","Paul Morris","Chase Nelson","Eric Stockinger","Joshua D. Welch","Sarah Wyatt","Alper Yilmaz","Lonnie R. Welch"],"categories":null,"content":"","date":1243803600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1243803600,"objectID":"d34423a9d11ff3d73034114c8dc08168","permalink":"/publication/lichtenberg-2009-id-216/","publishdate":"2009-06-01T00:00:00+03:00","relpermalink":"/publication/lichtenberg-2009-id-216/","section":"publication","summary":"","tags":null,"title":"Construction of Genomic Regulatory Encyclopedias: Strategies and Case Studies","type":"publication"},{"authors":["Alper Yilmaz","Ramana Davuluri","Saranyan Palaniswamy","Erich Grotewold"],"categories":null,"content":"","date":1243803600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1243803600,"objectID":"a45c47a5c766fe20ae184b6243e17e3b","permalink":"/publication/yilmaz-2009-id-215/","publishdate":"2009-06-01T00:00:00+03:00","relpermalink":"/publication/yilmaz-2009-id-215/","section":"publication","summary":"","tags":null,"title":"Discovery of Regulatory Networks in Plants by Linking Promoter and Transcription Factor Databases","type":"publication"},{"authors":["Alper Yilmaz","Milton Y Nishiyama","Bernardo Garcia Fuentes","Glaucia Mendes Souza","Daniel Janies","John Gray","Erich Grotewold"],"categories":null,"content":"","date":1230760800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1230760800,"objectID":"eec2f5cbcdac7f4edb5f98eef7584b45","permalink":"/publication/yilmaz-2009-id-213/","publishdate":"2009-01-01T00:00:00+02:00","relpermalink":"/publication/yilmaz-2009-id-213/","section":"publication","summary":"Transcription factors (TFs) are major players in gene regulatory networks and interactions between TFs and their target genes furnish spatiotemporal patterns of gene expression. Establishing the architecture of regulatory networks requires gathering information on TFs, their targets in the genome, and the corresponding binding sites. We have developed GRASSIUS (Grass Regulatory Information Services) as a knowledge-based Web resource that integrates information on TFs and gene promoters across the grasses. In its initial implementation, GRASSIUS consists of two separate, yet linked, databases. GrassTFDB holds information on TFs from maize (Zea mays), sorghum (Sorghum bicolor), sugarcane (Saccharum spp.), and rice (Oryza sativa). TFs are classified into families and phylogenetic relationships begin to uncover orthologous relationships among the participating species. This database also provides a centralized clearinghouse for TF synonyms in the grasses. GrassTFDB is linked to the grass TFome collection, which provides clones in recombination-based vectors corresponding to full-length open reading frames for a growing number of grass TFs. GrassPROMDB contains promoter and cis-regulatory element information for those grass species and genes for which enough data are available. The integration of GrassTFDB and GrassPROMDB will be accomplished through GrassRegNet as a first step in representing the architecture of grass regulatory networks. GRASSIUS can be accessed from www.grassius.org.","tags":null,"title":"GRASSIUS: a platform for comparative regulatory genomics across the grasses.","type":"publication"},{"authors":["M V P Nadella","W C Kisseberth","K S Nadella","N K Thudi","D H Thamm","E A McNiel","A Yilmaz","K Boris-Lawrie","T J Rosol"],"categories":null,"content":"","date":1204322400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1204322400,"objectID":"d808c5424fe9deff6ef5463ae31ac998","permalink":"/publication/nadella-2008-id-212/","publishdate":"2008-03-01T00:00:00+02:00","relpermalink":"/publication/nadella-2008-id-212/","section":"publication","summary":"Lymphoma is a malignant neoplasm arising from B or T lymphocytes. In dogs, one-third of lymphomas are highly aggressive multicentric T-cell lymphomas that are often associated with humoral hypercalcaemia of malignancy (HHM). There are no cell lines or animal models to investigate the pathogenesis of T-cell lymphoma and HHM in dogs. We developed the first xenograft model by injecting lymphoma cells from an Irish Wolfhound intraperitoneally into NOD/SCID mice. The mice developed multicentric lymphoma along with HHM and increased parathyroid hormone-related protein (PTHrP) as occurs in dogs with T-cell lymphoma. Using cytokine complementary DNA arrays, we identified genes that have potential implications in the pathogenesis of T-cell lymphoma. Quantitative reverse transcriptase-polymerase chain reaction (RT-PCR) of T-cell lymphoma samples from hypercalcaemic canine patients showed that PTHrP likely plays a central role in the pathogenesis of HHM and that hypercalcaemia is the result of a combinatorial effect of different hypercalcaemic factors. Finally, we monitored in vivo tumour progression and metastases in the mouse model by transducing the lymphoma cells with a lentiviral vector that encodes a luciferase-yellow fluorescent protein reporter and showed that in vivo trafficking patterns in this model were similar to those seen in dogs. This unique mouse model will be useful for translational research in lymphoma and for investigating the pathogenesis of T-cell lymphoma and HHM in the dog.","tags":null,"title":"NOD/SCID mouse model of canine T-cell lymphoma with humoral hypercalcaemia of malignancy: cytokine gene expression profiling and in vivo bioluminescent imaging.","type":"publication"},{"authors":["Cheryl Bolinger","Alper Yilmaz","Tiffiney Roberts Hartman","Melinda Butsch Kovacic","Soledad Fernandez","Jianxin Ye","Mary Forget","Patrick L Green","Kathleen Boris-Lawrie"],"categories":null,"content":"","date":1167602400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1167602400,"objectID":"663b542ffa8fa885d3fcc346ef722266","permalink":"/publication/bolinger-2007-id-211/","publishdate":"2007-01-01T00:00:00+02:00","relpermalink":"/publication/bolinger-2007-id-211/","section":"publication","summary":"The 5' untranslated region (UTR) of retroviruses contain structured replication motifs that impose barriers to efficient ribosome scanning. Two RNA structural motifs that facilitate efficient translation initiation despite a complex 5' UTR are internal ribosome entry site (IRES) and 5' proximal post-transcriptional control element (PCE). Here, stringent RNA and protein analyses determined the 5' UTR of spleen necrosis virus (SNV), reticuloendotheliosis virus A (REV-A) and human T-cell leukemia virus type 1 (HTLV-1) exhibit PCE activity, but not IRES activity. Assessment of SNV translation initiation in the natural context of the provirus determined that SNV is reliant on a cap-dependent initiation mechanism. Experiments with siRNAs identified that REV-A and HTLV-1 PCE modulate post-transcriptional gene expression through interaction with host RNA helicase A (RHA). Analysis of hybrid SNV/HTLV-1 proviruses determined SNV PCE facilitates Rex/Rex responsive element-independent Gag production and interaction with RHA is necessary. Ribosomal profile analyses determined that RHA is necessary for polysome association of HTLV-1 gag and provide direct evidence that RHA is necessary for efficient HTLV-1 replication. We conclude that PCE/RHA is an important translation regulatory axis of multiple lymphotropic retroviruses. We speculate divergent retroviruses have evolved a convergent RNA-protein interaction to modulate translation of their highly structured mRNA.","tags":null,"title":"RNA helicase A interacts with divergent lymphotropic retroviruses and promotes translation of human T-cell leukemia virus type 1.","type":"publication"},{"authors":["Alper Yilmaz","Soledad Fernandez","Michael D Lairmore","Kathleen Boris-Lawrie"],"categories":null,"content":"","date":1138744800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1138744800,"objectID":"d7d4457733bbb5a60ea5cecfdd066d7a","permalink":"/publication/yilmaz-2006-id-210/","publishdate":"2006-02-01T00:00:00+02:00","relpermalink":"/publication/yilmaz-2006-id-210/","section":"publication","summary":"BACKGROUND: Coordinate enhancement of transgene transcription and translation would be a potent approach to significantly improve protein output in a broad array of viral vectors and nonviral expression systems. Many vector transgenes are complementary DNA (cDNA). The lack of splicing can significantly reduce the efficiency of their translation. Some retroviruses contain a 5' terminal post-transcriptional control element (PCE) that facilitates translation of unspliced mRNA. Here we evaluated the potential for spleen necrosis virus PCE to stimulate protein production from HIV-1 based lentiviral vector by: 1) improving translation of the internal transgene transcript; and 2) functionally synergizing with a transcriptional enhancer to achieve coordinate increases in RNA synthesis and translation. RESULTS: Derivatives of HIV-1 SIN self-inactivating lentiviral vector were created that contain PCE and cytomegalovirus immediate early enhancer (CMV IE). Results from transfected cells and four different transduced cell types indicate that: 1) PCE enhanced transgene protein synthesis; 2) transcription from the internal promoter is enhanced by CMV IE; 3) PCE and CMV IE functioned synergistically to significantly increase transgene protein yield; 4) the magnitude of translation enhancement by PCE was similar in transfected and transduced cells; 5) differences were observed in steady state level of PCE vector RNA in transfected and transduced cells; 6) the lower steady state was not attributable to reduced RNA stability, but to lower cytoplasmic accumulation in transduced cells. CONCLUSION: PCE is a useful tool to improve post-transcriptional expression of lentiviral vector transgene. Coordinate enhancement of transcription and translation is conferred by the combination of PCE with CMV IE transcriptional enhancer and increased protein yield up to 11 to 17-fold in transfected cells. The incorporation of the vector provirus into chromatin correlated with reduced cytoplasmic accumulation of PCE transgene RNA. We speculate that epigenetic modulation of promoter activity altered cotranscriptional recruitment of RNA processing factors and reduced the availability of fully processed transcript or the efficiency of export from the nucleus. Our results provide an example of the dynamic interplay between the transcription and post-transcription steps of gene expression and document that introduction of heterologous gene expression signals can yield disparate effects in transfected versus transduced cells.","tags":null,"title":"Coordinate enhancement of transgene transcription and translation in a lentiviral vector.","type":"publication"},{"authors":["Alper Yilmaz","Cheryl Bolinger","Kathleen Boris-Lawrie"],"categories":null,"content":"","date":1136066400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1136066400,"objectID":"e83b4ec709e9a68a72797d5ede21325b","permalink":"/publication/yilmaz-2006-id-209/","publishdate":"2006-01-01T00:00:00+02:00","relpermalink":"/publication/yilmaz-2006-id-209/","section":"publication","summary":"","tags":null,"title":"Retrovirus Translation Initiation: Issues and Hypotheses Derived from Study of HIV-1","type":"publication"}]